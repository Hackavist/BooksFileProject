<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>